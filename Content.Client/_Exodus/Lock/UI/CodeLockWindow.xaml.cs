using Content.Shared.Exodus.Lock.Components;
//using Content.Client.UserInterface;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Exodus.Lock.UI;

[GenerateTypedNameReferences]
public sealed partial class CodeLockWindow : DefaultWindow
{
    public event Action<UiButton>? OnCodeLockButton;

    public CodeLockWindow()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        Button1.OnPressed += _ => OnCodeLockButton?.Invoke(UiButton.One);
        Button2.OnPressed += _ => OnCodeLockButton?.Invoke(UiButton.Two);
        Button3.OnPressed += _ => OnCodeLockButton?.Invoke(UiButton.Three);
        Button4.OnPressed += _ => OnCodeLockButton?.Invoke(UiButton.Four);
        Button5.OnPressed += _ => OnCodeLockButton?.Invoke(UiButton.Five);
        Button6.OnPressed += _ => OnCodeLockButton?.Invoke(UiButton.Six);
        Button7.OnPressed += _ => OnCodeLockButton?.Invoke(UiButton.Seven);
        Button8.OnPressed += _ => OnCodeLockButton?.Invoke(UiButton.Eight);
        Button9.OnPressed += _ => OnCodeLockButton?.Invoke(UiButton.Nine);
        CleanButton.OnPressed += _ => OnCodeLockButton?.Invoke(UiButton.Clean);
        Button0.OnPressed += _ => OnCodeLockButton?.Invoke(UiButton.Zero);
        SubmitButton.OnPressed += _ => OnCodeLockButton?.Invoke(UiButton.Submit);

        SubmitButton.Disabled = true;
    }

    public void UpdateState(BoundUserInterfaceState state)
    {
        var castState = (CodeLockBoundUserInterfaceState)state;

        var currentCodeLength = castState.CurrentCode.Length;
        var displayCode = castState.CurrentCode;

        //if (castState.Code != "" && castState.CurrentCode.Length < castState.Code.Length)
        //{
        //    displayCode += new string('*', castState.Code.Length - castState.CurrentCode.Length);
        //}
        //else if (castState.Code == "" && castState.CurrentCode.Length == 0)
        //{
        //    displayCode = Loc.GetString("Set a password");
        //}

        if (castState.Code == "" && currentCodeLength == 0)
        {
            displayCode = Loc.GetString("Set a password");
        }
        else if (currentCodeLength < 4)
        {
            displayCode += new string('*', 4 - currentCodeLength);
        }

        CodeLabel.Text = displayCode;

        if (castState.CurrentCode.Length == 4)
        {
            SubmitButton.Disabled = false;
        }
        else
        {
            SubmitButton.Disabled = true;
        }

        if (castState.SubmitEnabled && castState.Code != castState.CurrentCode)
        {
            CodeLabel.Text = Loc.GetString("WRONG!");
        }
    }
}
